I will use remote repositories every time i want to collaborate with other people
and/or every time i would like to share some code or docs
to other people. I think it is a wonderfull idea because is the base to improve
code , software and human activities in general.

Manual pull and push changes helps keep code in better control. As it is the
case with the staging area, this is an additional step that put you on hold for
a moment to think in your decision. Additionally , you probably need to keep
working on what you got locally before moving it to the shared repository so
this is the opportunity.

Fork is a great feature because it helps you "clone" a repository inside github.
That means you will have a copy of an existing repository in github, your peers
and collaborators will know the origin of the repository (forked from) and you
or your collaborators could clone those forks to the local machines and start
working from that repository with the already mentioned cycle of changes, push
or pull , commits and braches.

The benefit of having a copy of the last state of the remote (origin/master) in
the local machine is that , in case you change an artifact locally that
someone also changed in the remote (or pushed to the remote) , you have the
opportunity to compare origin/master with master (doing a fetch instead of a pull
- that will be , before merging) and work thru the diff and changes required to
synchronize.

Collaborate without git and github would be a lot harder, i would say order of
magnitude harder. All of us did it in the past : we create or receive some
spreadsheet  file from someone and start interacting trying to agree on order
of changes, leave the other one a message somewhere to let him know what the
change was, try to alter the name of the files to let them know which file i am
working on etc. Office suites use to include "change tracking" functionality
for comments inside files but who "merges" them ?....Well , life is lot easier
having git and github.
